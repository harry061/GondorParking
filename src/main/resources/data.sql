DROP  table  if exists PM_PARKING_STRUCTURE;
DROP  table  if exists PL_LANE;
DROP  table  if exists PS_PARKING_SLOTS;
DROP  table  if exists PT_TRANSACTION;

CREATE TABLE PM_PARKING_STRUCTURE(
  PS_SYSTEMID INT NOT NULL AUTO_INCREMENT,
  PS_BUILDINGID INT NOT NULL,
  PS_BUILDING_NAME VARCHAR(40),
  PS_NO_OF_FLOORS INT NOT NULL,
  PS_NO_OF_SLOTS INT NOT NULL
);
insert into PM_PARKING_STRUCTURE values (1,1,'Escape',5,20),
(1,2,'Escape',5,20),(1,3,'Escape',5,20),(1,4,'Escape',5,20)
;

CREATE TABLE PM_VEHICLE_TYPE(
VT_VEHICLE_TYPE_ID VARCHAR(10)  NOT NULL,
VT_VEHICLE_TYPE VARCHAR(30),
VT_VEHICLE_OCCUPANCY int  NOT NULL
);
insert into PM_VEHICLE_TYPE values ('B','BIKE',1),('C','CAR',2);

CREATE TABLE PS_PARKED_STATUS(
PS_PARKED_STATUS VARCHAR (5),
PS_PARKED_STATUS_DESC VARCHAR(10)
);

INSERT  INTO PS_PARKED_STATUS VALUES ('P','PARKED'),('V','VACATED');

CREATE TABLE PAL_LANE_TYPE(
  LT_LANE_TYPE_ID INT NOT NULL,
  LT_LANE_TYPE VARCHAR(10)
);
insert into PAL_LANE_TYPE values (1,'DRIVEWAY'),(2,'PARK');

CREATE TABLE SS_SLOT_STATUS(
SS_STATUS_ID VARCHAR(5) NOT NULL,
SS_SLOT_STATUS VARCHAR(20)
);
insert into SS_SLOT_STATUS values ('R','RESERVED'),('O','OCCUPIED'),('F','FREE'),('UN','NOTAVAILABLE');

--Floor Table
CREATE TABLE PF_FLOOR(
PF_SYSTEMID INT NOT NULL,
PF_BUILDING_ID INT NOT NULL,
PF_FLOOR_ID INT NOT NULL,
PF_FLOOR_NAME VARCHAR(20),
FOREIGN KEY(PF_SYSTEMID,PF_BUILDING_ID) REFERENCES PM_PARKING_STRUCTURE(PS_SYSTEMID,PS_BUILDINGID),
PRIMARY KEY(PF_SYSTEMID,PF_BUILDING_ID,PF_FLOOR_ID)
);
INSERT INTO PF_FLOOR VALUES (1,1,1,'FIRSTFLOOR'),(1,1,2,'SECONDFLOOR'),(1,1,3,'THIRDFLOOR'),(1,1,4,'FOURTHFLOOR'),(1,1,5,'FIFTHFLOOR'),
(1,2,5,''),(1,3,5,''),(1,4,5,'');

--Lanes in a floor
CREATE TABLE PL_LANE(
PL_SYSTEMID INT NOT NULL,
PL_BUILDING_ID INT,
PL_FLOOR_ID INT,
PL_LANE_ID INT NOT NULL,
PL_LANE_TYPE INT NOT NULL,
PL_NO_OF_SERVICEABLE_SLOTS INT NOT NULL,
FOREIGN KEY(PL_SYSTEMID,PL_BUILDING_ID,PL_FLOOR_ID) REFERENCES PF_FLOOR(PF_SYSTEMID,PF_BUILDING_ID,PF_FLOOR_ID),
PRIMARY KEY(PL_SYSTEMID,PL_BUILDING_ID,PL_FLOOR_ID,PL_LANE_ID)
);
INSERT INTO PL_LANE VALUES  (1,1,1,1,2,5),(1,1,1,2,1,5),(1,1,1,3,2,5),(1,1,1,4,2,5),(1,1,1,5,1,5),(1,1,1,6,2,5),
                            (1,1,2,1,2,5),(1,1,2,2,1,5),(1,1,2,3,2,5),(1,1,2,4,2,5),(1,1,2,5,1,5),(1,1,2,6,2,5),
                            (1,1,3,1,2,5),(1,1,3,2,1,5),(1,1,3,3,2,5),(1,1,3,4,2,5),(1,1,3,5,1,5),(1,1,3,6,2,5),
                            (1,1,4,1,2,5),(1,1,4,2,1,5),(1,1,4,3,2,5),(1,1,4,4,2,5),(1,1,4,5,1,5),(1,1,4,6,2,5),
                            (1,1,5,1,2,5),(1,1,5,2,1,5),(1,1,5,3,2,5),(1,1,5,4,2,5),(1,1,5,5,1,5),(1,1,5,6,2,5),
--extra check
(1,2,5,1,2,5),(1,2,5,2,2,5),(1,3,5,1,2,3),(1,4,5,1,2,1);
--Parking Slots
CREATE TABLE PS_PARKING_SLOTS(
PAS_SYSTEMID INT,
PAS_BUILDING_ID INT ,
PAS_FLOOR_ID INT ,
PAS_LANE_ID INT NOT NULL,
PAS_SLOT_ID INT NOT NULL,
PAS_SUBSLOTS_MAX_ALLOWED INT,
PAS_SUBSLOTS_USED INT,
PAS_SLOT_STATUS VARCHAR(5),
PAS_SLOT_EXIT BOOLEAN,
PAS_VEHICLE_TYPE VARCHAR(10) ,
FOREIGN KEY(PAS_SYSTEMID,PAS_BUILDING_ID,PAS_FLOOR_ID,PAS_LANE_ID) REFERENCES PL_LANE(PL_SYSTEMID,PL_BUILDING_ID,PL_FLOOR_ID,PL_LANE_ID),
FOREIGN KEY(PAS_VEHICLE_TYPE) REFERENCES PM_VEHICLE_TYPE(VT_VEHICLE_TYPE_ID),
PRIMARY KEY(PAS_SYSTEMID,PAS_BUILDING_ID,PAS_FLOOR_ID,PAS_LANE_ID,PAS_SLOT_ID)
);

INSERT INTO PS_PARKING_SLOTS VALUES (1,1,1,1,1,2,0,'R',TRUE,'C'),(1,1,1,1,2,2,0,'F',FALSE,'C'),(1,1,1,1,3,2,0,'F',FALSE,'C'),(1,1,1,1,4,2,0,'F',FALSE,'C'),(1,1,1,1,5,2,0,'F',FALSE,'B'),
                                    (1,1,1,2,1,2,0,'R',TRUE,'C'),(1,1,1,2,2,2,0,'F',FALSE,'C'),(1,1,1,2,3,2,0,'F',FALSE,'C'),(1,1,1,2,4,2,0,'F',FALSE,'C'),(1,1,1,2,5,2,0,'F',FALSE,'B'),
                                    (1,1,1,3,1,2,0,'R',TRUE,'C'),(1,1,1,3,2,2,0,'F',FALSE,'C'),(1,1,1,3,3,2,0,'F',FALSE,'C'),(1,1,1,3,4,2,0,'F',FALSE,'C'),(1,1,1,3,5,2,0,'F',FALSE,'B'),
                                    (1,1,1,4,1,2,0,'R',TRUE,'C'),(1,1,1,4,2,2,0,'F',FALSE,'C'),(1,1,1,4,3,2,0,'F',FALSE,'C'),(1,1,1,4,4,2,0,'F',FALSE,'C'),(1,1,1,4,5,2,0,'F',FALSE,'B'),
                                    (1,1,1,5,1,2,0,'F',FALSE,'C'),(1,1,1,5,2,2,0,'F',FALSE,'C'),(1,1,1,5,3,2,0,'F',FALSE,'C'),(1,1,1,5,4,2,0,'F',FALSE,'C'),(1,1,1,5,5,2,0,'F',FALSE,'B'),
                                    (1,1,1,6,1,2,0,'F',FALSE,'C'),(1,1,1,6,2,2,0,'F',FALSE,'C'),(1,1,1,6,3,2,0,'F',FALSE,'C'),(1,1,1,6,4,2,0,'F',FALSE,'C'),(1,1,1,6,5,2,0,'F',FALSE,'B'),
--second floor
(1,1,2,1,1,2,0,'F',FALSE,'C'),(1,1,2,1,2,2,0,'F',FALSE,'C'),(1,1,2,1,3,2,0,'F',FALSE,'C'),(1,1,2,1,4,2,0,'F',FALSE,'C'),(1,1,2,1,5,2,0,'F',FALSE,'B'),
(1,1,2,2,1,2,0,'F',FALSE,'C'),(1,1,2,2,2,2,0,'F',FALSE,'C'),(1,1,2,2,3,2,0,'F',FALSE,'C'),(1,1,2,2,4,2,0,'F',FALSE,'C'),(1,1,2,2,5,2,0,'F',FALSE,'B'),
(1,1,2,3,1,2,0,'F',FALSE,'C'),(1,1,2,3,2,2,0,'F',FALSE,'C'),(1,1,2,3,3,2,0,'F',FALSE,'C'),(1,1,2,3,4,2,0,'F',FALSE,'C'),(1,1,2,3,5,2,0,'F',FALSE,'B'),
(1,1,2,4,1,2,0,'F',FALSE ,'C'),(1,1,2,4,2,2,0,'F',FALSE,'C'),(1,1,2,4,3,2,0,'F',FALSE,'C'),(1,1,2,4,4,2,0,'F',FALSE,'C'),(1,1,2,4,5,2,0,'F',FALSE,'B'),
(1,1,2,5,1,2,0,'F',FALSE,'C'),(1,1,2,5,2,2,0,'F',FALSE,'C'),(1,1,2,5,3,2,0,'F',FALSE,'C'),(1,1,2,5,4,2,0,'F',FALSE,'C'),(1,1,2,5,5,2,0,'F',FALSE,'B'),
(1,1,2,6,1,2,0,'F',FALSE,'C'),(1,1,2,6,2,2,0,'F',FALSE,'C'),(1,1,2,6,3,2,0,'F',FALSE,'C'),(1,1,2,6,4,2,0,'F',FALSE,'C'),(1,1,2,6,5,2,0,'F',TRUE,'B'),
--third floor
(1,1,3,1,1,2,0,'F',FALSE,'C'),(1,1,3,1,2,2,0,'F',FALSE,'C'),(1,1,3,1,3,2,0,'F',FALSE,'C'),(1,1,3,1,4,2,0,'F',FALSE,'C'),(1,1,3,1,5,2,0,'F',FALSE,'B'),
(1,1,3,2,1,2,0,'F',FALSE,'C'),(1,1,3,2,2,2,0,'F',FALSE,'C'),(1,1,3,2,3,2,0,'F',FALSE,'C'),(1,1,3,2,4,2,0,'F',FALSE,'C'),(1,1,3,2,5,2,0,'F',FALSE,'B'),
(1,1,3,3,1,2,0,'F',FALSE,'C'),(1,1,3,3,2,2,0,'F',FALSE,'C'),(1,1,3,3,3,2,0,'F',FALSE,'C'),(1,1,3,3,4,2,0,'F',FALSE,'C'),(1,1,3,3,5,2,0,'F',FALSE,'B'),
(1,1,3,4,1,2,0,'F',FALSE,'C'),(1,1,3,4,2,2,0,'F',FALSE,'C'),(1,1,3,4,3,2,0,'F',FALSE,'C'),(1,1,3,4,4,2,0,'F',FALSE,'C'),(1,1,3,4,5,2,0,'F',FALSE,'B'),
(1,1,3,5,1,2,0,'F',FALSE,'C'),(1,1,3,5,2,2,0,'F',FALSE,'C'),(1,1,3,5,3,2,0,'F',FALSE,'C'),(1,1,3,5,4,2,0,'F',FALSE,'C'),(1,1,3,5,5,2,0,'F',FALSE,'B'),
(1,1,3,6,1,2,0,'F',FALSE,'C'),(1,1,3,6,2,2,0,'F',FALSE,'C'),(1,1,3,6,3,2,0,'F',FALSE,'C'),(1,1,3,6,4,2,0,'F',FALSE,'C'),(1,1,3,6,5,2,0,'F',FALSE,'B'),

--Fourth floor
(1,1,4,1,1,2,0,'F',FALSE,'B'),(1,1,4,1,2,2,0,'F',FALSE,'C'),(1,1,4,1,3,2,0,'F',FALSE,'C'),(1,1,4,1,4,2,0,'F',FALSE,'C'),(1,1,4,1,5,2,0,'F',FALSE,'B'),
(1,1,4,2,1,2,0,'F',FALSE,'B'),(1,1,4,2,2,2,0,'F',FALSE,'C'),(1,1,4,2,3,2,0,'F',FALSE,'C'),(1,1,4,2,4,2,0,'F',FALSE,'C'),(1,1,4,2,5,2,0,'F',FALSE,'B'),
(1,1,4,3,1,2,0,'F',FALSE,'B'),(1,1,4,3,2,2,0,'F',FALSE,'C'),(1,1,4,3,3,2,0,'F',FALSE,'C'),(1,1,4,3,4,2,0,'F',FALSE,'C'),(1,1,4,3,5,2,0,'F',FALSE,'B'),
(1,1,4,4,1,2,0,'F',FALSE,'B'),(1,1,4,4,2,2,0,'F',FALSE,'C'),(1,1,4,4,3,2,0,'F',FALSE,'C'),(1,1,4,4,4,2,0,'F',FALSE,'C'),(1,1,4,4,5,2,0,'F',FALSE,'B'),
(1,1,4,5,1,2,0,'F',FALSE,'B'),(1,1,4,5,2,2,0,'F',FALSE,'C'),(1,1,4,5,3,2,0,'F',FALSE,'C'),(1,1,4,5,4,2,0,'F',FALSE,'C'),(1,1,4,5,5,2,0,'F',FALSE,'B'),
(1,1,4,6,1,2,0,'F',FALSE,'B'),(1,1,4,6,2,2,0,'F',FALSE,'C'),(1,1,4,6,3,2,0,'F',FALSE,'C'),(1,1,4,6,4,2,0,'F',FALSE,'C'),(1,1,4,6,5,2,0,'F',FALSE,'B'),
--Fifth floor
(1,1,5,1,1,2,0,'F',FALSE,'B'),(1,1,5,1,2,2,0,'F',FALSE,'C'),(1,1,5,1,3,2,0,'F',FALSE,'C'),(1,1,5,1,4,2,0,'F',FALSE,'C'),(1,1,5,1,5,2,0,'F',FALSE,'B'),
(1,1,5,2,1,2,0,'F',FALSE,'B'),(1,1,5,2,2,2,0,'F',FALSE,'C'),(1,1,5,2,3,2,0,'F',FALSE,'C'),(1,1,5,2,4,2,0,'F',FALSE,'C'),(1,1,5,2,5,2,0,'F',FALSE,'B'),
(1,1,5,3,1,2,0,'F',FALSE,'B'),(1,1,5,3,2,2,0,'F',FALSE,'C'),(1,1,5,3,3,2,0,'F',FALSE,'C'),(1,1,5,3,4,2,0,'F',FALSE,'C'),(1,1,5,3,5,2,0,'F',FALSE,'B'),
(1,1,5,4,1,2,0,'F',FALSE,'B'),(1,1,5,4,2,2,0,'F',FALSE,'C'),(1,1,5,4,3,2,0,'F',FALSE,'C'),(1,1,5,4,4,2,0,'F',FALSE,'C'),(1,1,5,4,5,2,0,'F',FALSE,'B'),
(1,1,5,5,1,2,0,'F',FALSE,'B'),(1,1,5,5,2,2,0,'F',FALSE,'C'),(1,1,5,5,3,2,0,'F',FALSE,'C'),(1,1,5,5,4,2,0,'F',FALSE,'C'),(1,1,5,5,5,2,0,'F',FALSE,'B'),
(1,1,5,6,1,2,0,'F',FALSE,'B'),(1,1,5,6,2,2,0,'F',FALSE,'C'),(1,1,5,6,3,2,0,'F',FALSE,'C'),(1,1,5,6,4,2,0,'F',FALSE,'C'),(1,1,5,6,5,2,0,'F',FALSE,'B'),

(1,2,5,1,1,2,0,'F',FALSE,'B'),(1,2,5,2,2,2,0,'F',FALSE,'B'),(1,3,5,1,4,2,0,'F',FALSE,'C'),(1,4,5,1,5,2,0,'F',FALSE,'B');


CREATE TABLE PT_TRANSACTION(
PT_TXN_ID INT,
PT_SYSTEMID INT,
PT_BUILDING_ID INT,
PT_FLOOR_ID INT,
PT_LANE_ID INT,
PT_SLOT_ID INT,
SLOT_ALLOCATED_DATETIME DATETIME,
SLOT_RETURNED_DATETIME DATETIME,
PT_VEHICLE_NUMBER VARCHAR(20),
PT_PARKED_STATUS VARCHAR(5),

FOREIGN KEY(PT_SYSTEMID,PT_BUILDING_ID,PT_FLOOR_ID,PT_LANE_ID,PT_SLOT_ID) REFERENCES PS_PARKING_SLOTS(PAS_SYSTEMID,PAS_BUILDING_ID,PAS_FLOOR_ID,PAS_LANE_ID,PAS_SLOT_ID),
FOREIGN KEY(PT_PARKED_STATUS) REFERENCES PS_PARKED_STATUS(PS_PARKED_STATUS),
PRIMARY KEY(PT_TXN_ID)
);

